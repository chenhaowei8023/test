<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--NameSpace 任意起名字，就是这个Mapper.xml的身份标签-->
<mapper namespace="play">

    <!--sql语句是select类型，标签用select，
    id随便起，是这条sql语句的身份标签，一个xml文件里可以有多个sql语句，但是id不能重复

    resultType是执行sql的结果，mybatis底层会把statement执行sql的结果集解析出来。用set方法封装到User对象里，因为User的变量名和数据库列名一样，所以通过反射setXx可以封装成功
   -->

    <select id="selectOne" resultType="com.suo.mapper.User">
        select id,name from user where id = 1
    </select>
    <select id="selectList" resultType="java.lang.String">
        select name,id from user where age >=10 order by age desc
    </select>
    <insert id="insertUser" parameterType="com.suo.mapper.User">
        <!--次数的字段顺序必须和数据库顺序保持一致-->
        insert into user values (#{id} ,#{name},#{age}, #{pwd})
    </insert>
    <delete id="deleteUserById" parameterType="java.lang.Integer" >
        <!--#{x}让id 变成一个参数，可以在执行sql时，再输入具体值-->
        delete from user where id = #{id}
    </delete>
    <update id="updateUserById" parameterType="com.suo.mapper.User">
        update user set name = #{name} ,age = #{age} where id = #{id}
    </update>
</mapper>